#include <iostream>
#include <NTL/ZZ.h>
#include <string>
#include <sstream>

using namespace NTL;
using namespace std;

ZZ Min(ZZ a, ZZ b){
    ZZ m;
    m=a;
    if (a>b)
        m=b;

    return m;
}

ZZ lsbgcd (ZZ u, ZZ v){
    ZZ a,b,t,aux;
    int s;
    a=u;
    b=v;
    while(b!=0){
        s=0;
        while ((b<<s) <= a){
            s++;
        }
        s=s-1;
        t= Min(a-(b<<s),(b<<(s+1))-a);
        a=b;
        b=t;
        if(a<b){
            aux=a;
            a=b;
            b=aux;
        }
    }
    return a;

    }

ZZ binary_shift(ZZ u,ZZ v){
    ZZ shift;
    if (u == 0) return v;
    if (v == 0) return u;
    for (shift = 0; ((u | v) & 1) == 0; ++shift) {
        u= u >> 1;
        v= v >> 1;
    }
    while ((u & 1) == 0)
        u= u >> 1;
    do{
        while ((v & 1) == 0)
            v= v >> 1;
        if (u > v) {
            ZZ t (v); v = u; u = t;
       }
       v = v - u;
    }
    while (v != 0);

    return u<<conv<int>(shift);
}

    ZZ strtozz(string p){
        char oracion[1000];
        strcpy(oracion,p.c_str());
        return conv<ZZ>(oracion);
    }

int main()
{
    string aS = "521323552535325524124112233434324234423523535534651124243";
    string bS = "434124521341241125235535322352353153523343432423253252327";
    ZZ a;
    ZZ b;
    a =strtozz(aS);
    b = strtozz(bS);

    cout << "Binary GCD: " << binary_shift(a,b) << endl;
    cout << "LSBGCD: " << lsbgcd(a,b) << endl;


    return 0;
}
